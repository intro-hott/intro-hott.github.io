"use strict";(self.webpackChunkintro_hott=self.webpackChunkintro_hott||[]).push([[959],{3905:(e,t,o)=>{o.d(t,{Zo:()=>c,kt:()=>h});var r=o(7294);function n(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,r)}return o}function i(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?a(Object(o),!0).forEach((function(t){n(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function l(e,t){if(null==e)return{};var o,r,n=function(e,t){if(null==e)return{};var o,r,n={},a=Object.keys(e);for(r=0;r<a.length;r++)o=a[r],t.indexOf(o)>=0||(n[o]=e[o]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)o=a[r],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(n[o]=e[o])}return n}var s=r.createContext({}),p=function(e){var t=r.useContext(s),o=t;return e&&(o="function"==typeof e?e(t):i(i({},t),e)),o},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var o=e.components,n=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(o),d=n,h=u["".concat(s,".").concat(d)]||u[d]||m[d]||a;return o?r.createElement(h,i(i({ref:t},c),{},{components:o})):r.createElement(h,i({ref:t},c))}));function h(e,t){var o=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=o.length,i=new Array(a);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:n,i[1]=l;for(var p=2;p<a;p++)i[p]=o[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,o)}d.displayName="MDXCreateElement"},1150:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var r=o(7462),n=(o(7294),o(3905));const a={},i="0: Was Soll HoTT?",l={unversionedId:"0",id:"0",title:"0: Was Soll HoTT?",description:"Description",source:"@site/videos/0.md",sourceDirName:".",slug:"/0",permalink:"/videos/0",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"The Intro to HoTT Video Series",permalink:"/videos/about"},next:{title:"Part 0: Introduction",permalink:"/videos/1/part0"}},s={},p=[{value:"Description",id:"description",level:2},{value:"Some relevant resources:",id:"some-relevant-resources",level:2},{value:"Formalization links:",id:"formalization-links",level:2},{value:"HoTT textbooks:",id:"hott-textbooks",level:2}],c={toc:p},u="wrapper";function m(e){let{components:t,...o}=e;return(0,n.kt)(u,(0,r.Z)({},c,o,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"0-was-soll-hott"},"0: Was Soll HoTT?"),(0,n.kt)("div",{class:"videoContainer"},(0,n.kt)("iframe",{class:"responsive-iframe",src:"https://www.youtube.com/embed/Pu16iodESTU",title:"YouTube video player",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",allowfullscreen:!0})),(0,n.kt)("h2",{id:"description"},"Description"),(0,n.kt)("p",null,"What is homotopy type theory good for? In this video, I discuss the ideas of type-checking and formalized mathematics, and begin to describe how HoTT promises a new future for mathematics. "),(0,n.kt)("p",null,"This the the first (or, rather, zeroth) video in a planned video series covering the basics of homotopy type theory. This is a reboot of the video series I started last year (",(0,n.kt)("a",{parentName:"p",href:"https://www.youtube.com/playlist?list=PL245PKGUDdcN_MQ9LwnotqTHq2d_hpalJ"},"Old Intro to HoTT"),")\u2014I got too busy last year with teaching and starting my PhD. Thanks to everyone who left kind comments on those videos, and encouraged me to make videos again!"),(0,n.kt)("p",null,"Pardon my butchering of the German language."),(0,n.kt)("h2",{id:"some-relevant-resources"},"Some relevant resources:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://www.quantamagazine.org/titans-of-mathematics-clash-over-epic-proof-of-abc-conjecture-20180920/"},"Article")," about Mochizuki's purported proof of the ABC conjecture"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://leanprover.github.io/"},"Lean theorem prover")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://thecodeboss.dev/2015/11/programming-concepts-static-vs-dynamic-type-checking/"},"Good post"),' describing more about different kinds of typing. When I speak of "typed programming languages", I actually mean strong, statically-typed programming languages. Python isn\'t truly untyped\u2014it actually has a type system\u2014but not a strong, static one like I describe here.'),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://ncatlab.org/nlab/show/Introduction+to+Homotopy+Type+Theory"},"Resources page")," for Egbert Rijke's Introduction to Homotopy Type Theory textbook"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://nrich.maths.org/2478"},"Gauss kindergarten formula"))),(0,n.kt)("h2",{id:"formalization-links"},"Formalization links:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://github.com/jacobneu/HoTT-agda"},"The formalization I'm developing for this video series"))),(0,n.kt)("h2",{id:"hott-textbooks"},"HoTT textbooks:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://homotopytypetheory.org/book/"},"The HoTT Book (2013)"),"\u2014the original statement of HoTT"),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("a",{parentName:"li",href:"https://ncatlab.org/nlab/show/Introduction+to+Homotopy+Type+Theory"},"Introduction to Homotopy Type Theory"),", by Egbert Rijke (to be released)")))}m.isMDXComponent=!0}}]);